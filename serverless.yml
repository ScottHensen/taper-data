service: taper-data

provider:
  name: aws
  runtime: nodejs6.10
  stage: dev
  region: us-east-1
  memorySize: 128
  environment:
    DYNAMODB_BANDS_TABLE: ${opt:stage, self:provider.stage}-taper-bands
    DYNAMODB_SHOWS_TABLE: ${opt:stage, self:provider.stage}-taper-shows
  iamRoleStatements:
    # Allow DB access to Bands
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:Query
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_BANDS_TABLE}"
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:Query
    # Allow DB access to Shows
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_BANDS_TABLE}/index/*"
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:Query
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_SHOWS_TABLE}"
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:Query
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_SHOWS_TABLE}/index/*"

functions:
# Shows CRUD
  createShow:
    handler: handler.createShow
    events:
      - http:
          path: shows
          method: post
          cors: true
  getOneShow:
    handler: handler.getOneShow
    events:
      - http:
          path: shows/{showId}
          method: get
          cors: true
  getAllShows:
    handler: handler.getAllShows
    events:
      - http:
          path: shows
          method: get
          cors: true
  updateShow:
    handler: handler.updateShow
    events:
      - http:
          path: shows/{showId}
          method: put
          cors: true
  deleteShow:
    handler: handler.deleteShow
    events:
      - http:
          path: shows/{showId}
          method: delete
          cors: true
# Bands CRUD
  createBand:
    handler: handler.createBand
    events:
      - http:
          path: bands
          method: post
          cors: true
  getOneBand:
    handler: handler.getOneBand
    events:
      - http:
          path: bands/{bandId}
          method: get
          cors: true
  getAllBands:
    handler: handler.getAllBands
    events:
      - http:
          path: bands
          method: get
          cors: true
  updateBand:
    handler: handler.updateBand
    events:
      - http:
          path: bands/{bandId}
          method: put
          cors: true
  deleteBand:
    handler: handler.deleteBand
    events:
      - http:
          path: bands/{bandId}
          method: delete
          cors: true
# Bands/Shows
  getAllShowsForBand:
    handler: handler.getAllShowsForBand
    events:
      - http:
          path: bands/{bandId}/shows
          method: get
          cors: true
